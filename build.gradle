/*
 * Copyright (c) 2021.
 *
 * This file is part of Matchday.
 *
 * Matchday is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Matchday is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Matchday.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'self.me'
version = '0.0.1-SNAPSHOT'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Feed parsing
	implementation group: 'org.jsoup', name: 'jsoup', version: '1.14.1'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
	implementation group: 'org.brotli', name: 'dec', version: '0.1.2'

	// Annotations
    implementation 'org.jetbrains:annotations:21.0.1'
	implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.jetbrains:annotations:21.0.1'
	implementation 'org.jetbrains:annotations:21.0.1'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // Lombok
    implementation group: 'org.jetbrains', name: 'annotations', version: '21.0.1'
    implementation 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	// SpringBoot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'

	// MySQL
	implementation 'mysql:mysql-connector-java'

	// Development
	implementation 'org.flywaydb:flyway-core:7.11.2'
	implementation 'com.h2database:h2'
	// Remove to eliminate reflective access warning per: https://stackoverflow.com/a/61007739/4871490
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	// Testing
	def jupiter_version = '5.7.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.junit.jupiter:junit-jupiter:$jupiter_version"
	testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
}

bootRun {
	if (project.hasProperty('args')) {
		args = project.args.split(',')
	}
}

test {
	useJUnitPlatform()
}
